#!/usr/bin/env sh

set -xe

NODE_ENV=production
target_arch=x86_64
dist_dir=dist
script_dir=`dirname $0`
app_version=$($script_dir/npm-pkg-version)
root_dir=$script_dir/..
default_yml_config=$root_dir/.ferret-default.yml
build_dir=$root_dir/build

prepare() {
  cd $build_dir
  npm i --loglevel error
  cd -
}

build() {
  target="$target_os"

  full_target=ferret-$app_version-$target_os-$target_arch
  target_dist=$dist_dir/$full_target

  mkdir -p $target_dist

  # copy over all plugins
  cp -r $build_dir/node_modules $target_dist/node_modules


  # copy over all default config
  mkdir -p $target_dist/default
  cp $default_yml_config $target_dist/default/.ferret.yml
  for i in $root_dir/meta/*
  do
    meta_dir=`basename $i`
    if [ -d "$i/default" ]; then
      cp -r $i/default $target_dist/default/$meta_dir
    fi
  done

  # until this pkg gets removed from dev deps
  rm -r $target_dist/node_modules/snyk*

  # need to include xdg-open for ferret bin
  mkdir -p $target_dist/node_modules/opn
  cp $root_dir/node_modules/opn/xdg-open $target_dist/node_modules/opn/xdg-open
  cp $root_dir/node_modules/opn/xdg-open $target_dist/xdg-open

  bin_name="$target_dist/ferret"
  zip_name="$full_target.tgz"

  npx pkg -t $target -o $bin_name package.json

  tar -C $target_dist/.. -czf $target_dist/../$zip_name $full_target
}

clean() {
  rm -rf $dist_dir
  mkdir $dist_dir
}

clean

#prepare

#npm run clean
#npm run compile

target_os=linux
build

#target_os=win
#build

#target_os=mac
#build
